var MediatorNames=Objs("org.puremvc.js.demos.objs.employeeadmin.abc.MediatorNames");
MediatorNames.USER_FORM_MEDIATOR="userFormMediator";MediatorNames.USER_LIST_MEDIATOR="userListMediator";
MediatorNames.ROLE_PANEL_MEDIATOR="rolePanelMediator";var NotificationNames=Objs("org.puremvc.js.demos.objs.employeeadmin.abc.NotificationNames");
NotificationNames.STARTUP="startup";NotificationNames.NEW_USER="newUser";NotificationNames.DELETE_USER="deleteUser";
NotificationNames.CANCEL_SELECTED="cancelSelected";NotificationNames.USER_SELECTED="userSelected";
NotificationNames.USER_ADDED="userAdded";NotificationNames.USER_UPDATED="userUpdated";
NotificationNames.USER_DELETED="userDeleted";NotificationNames.ADD_ROLE="addRole";
NotificationNames.ADD_ROLE_RESULT="addRoleResult";var ProxyNames=Objs("org.puremvc.js.demos.objs.employeeadmin.abc.ProxyNames");
ProxyNames.ROLE_PROXY="roleProxy";ProxyNames.USER_PROXY="userProxy";var AddRoleResultCommand=Objs("org.puremvc.js.demos.objs.employeeadmin.controller.AddRoleResultCommand",SimpleCommand,{execute:function(note){var result=note.getBody();
if(!result){alert("Role already exists for this user!\nAdd User Role");}}});var DeleteUserCommand=Objs("org.puremvc.js.demos.objs.employeeadmin.controller.DeleteUserCommand",SimpleCommand,{execute:function(note){var user=note.getBody();
var userProxy=this.facade.retrieveProxy(UserProxy.NAME);var roleProxy=this.facade.retrieveProxy(RoleProxy.NAME);
userProxy.deleteItem(user);roleProxy.deleteItem(user);this.sendNotification(NotificationNames.USER_DELETED);
}});var PrepModelCommand=Objs("org.puremvc.js.demos.objs.employeeadmin.controller.PrepModelCommand",SimpleCommand,{execute:function(note){this.facade.registerProxy(new UserProxy(ProxyNames.USER_PROXY,this.generateUsers()));
this.facade.registerProxy(new RoleProxy(ProxyNames.ROLE_PROXY,this.generateRoles()));
},generateUsers:function(){var user;var users=new Array();user=new UserVO();user.uname="lstooge";
user.fname="Larry";user.lname="Stooge";user.email="larry@stooges.com";user.pass="ijk456";
user.department=DeptEnum.ACCT;users.push(user);user=new UserVO();user.uname="cstooge";
user.fname="Curly";user.lname="Stooge";user.email="curly@stooges.com";user.pass="xyz987";
user.department=DeptEnum.SALES;users.push(user);user=new UserVO();user.uname="mstooge";
user.fname="Moe";user.lname="Stooge";user.email="moe@stooges.com";user.pass="abc123";
user.department=DeptEnum.PLANT;users.push(user);return users;},generateRoles:function(){var role;
var roles=new Array();role=new RoleVO();role.uname="lstooge";role.roles=[RoleEnum.PAYROLL,RoleEnum.EMP_BENEFITS];
roles.push(role);role=new RoleVO();role.uname="cstooge";role.roles=[RoleEnum.ACCT_PAY,RoleEnum.ACCT_RCV,RoleEnum.GEN_LEDGER];
roles.push(role);role=new RoleVO();role.uname="mstooge";role.roles=[RoleEnum.INVENTORY,RoleEnum.PRODUCTION,RoleEnum.SALES,RoleEnum.SHIPPING];
roles.push(role);return roles;}});var PrepViewCommand=Objs("org.puremvc.js.demos.objs.employeeadmin.controller.PrepViewCommand",SimpleCommand,{execute:function(note){var app=note.getBody();
var userForm=new UserForm();var userList=new UserList();var rolePanel=new RolePanel();
var userListMediator=new UserListMediator(MediatorNames.USER_LIST_MEDIATOR,userList);
var userFormMediator=new UserFormMediator(MediatorNames.USER_FORM_MEDIATOR,userForm);
var rolePanelMediator=new RolePanelMediator(MediatorNames.ROLE_PANEL_MEDIATOR,rolePanel);
this.facade.registerMediator(userFormMediator);this.facade.registerMediator(userListMediator);
this.facade.registerMediator(rolePanelMediator);}});var StartupCommand=Objs("org.puremvc.js.demos.objs.employeeadmin.controller.StartupCommand",MacroCommand,{initializeMacroCommand:function(note){this.addSubCommand(PrepModelCommand);
this.addSubCommand(PrepViewCommand);}});var DeptEnum=Objs("org.puremvc.js.demos.objs.employeeadmin.model.enum.DeptEnum",{initialize:function(value,ordinal){this.value=value;
this.ordinal=ordinal;},ordinal:null,value:null,equals:function(deptEnum){return(this.ordinal==deptEnum.ordinal&&this.value==deptEnum.value);
}});DeptEnum.NONE_SELECTED=new DeptEnum("Select a department",-1);DeptEnum.ACCT=new DeptEnum("Accounting",0);
DeptEnum.SALES=new DeptEnum("Sales",1);DeptEnum.PLANT=new DeptEnum("Plant",2);DeptEnum.SHIPPING=new DeptEnum("Shipping",3);
DeptEnum.QC=new DeptEnum("Quality Control",4);DeptEnum.getList=function(){return[DeptEnum.ACCT,DeptEnum.SALES,DeptEnum.PLANT];
};DeptEnum.getComboList=function(){var cList=DeptEnum.getList();cList.unshift(DeptEnum.NONE_SELECTED);
return cList;};var RoleEnum=Objs("org.puremvc.js.demos.objs.employeeadmin.model.enum.RoleEnum",{ordinal:null,value:null,initialize:function(value,ordinal){this.value=value;
this.ordinal=ordinal;},equals:function(roleEnum){return(this.ordinal==roleEnum.ordinal&&this.value==roleEnum.value);
}});RoleEnum.NONE_SELECTED=new RoleEnum("Select a role",-1);RoleEnum.ADMIN=new RoleEnum("Administrator",0);
RoleEnum.ACCT_PAY=new RoleEnum("Accounts Payable",1);RoleEnum.ACCT_RCV=new RoleEnum("Accounts Receivable",2);
RoleEnum.EMP_BENEFITS=new RoleEnum("Employee Benefits",3);RoleEnum.GEN_LEDGER=new RoleEnum("General Ledger",4);
RoleEnum.PAYROLL=new RoleEnum("Payroll",5);RoleEnum.INVENTORY=new RoleEnum("Inventory",6);
RoleEnum.PRODUCTION=new RoleEnum("Production",7);RoleEnum.QUALITY_CTL=new RoleEnum("Quality Control",8);
RoleEnum.SALES=new RoleEnum("Sales",9);RoleEnum.ORDERS=new RoleEnum("Orders",10);
RoleEnum.CUSTOMERS=new RoleEnum("Customers",11);RoleEnum.SHIPPING=new RoleEnum("Shipping",12);
RoleEnum.RETURNS=new RoleEnum("Returns",13);RoleEnum.getList=function(){return[RoleEnum.ADMIN,RoleEnum.ACCT_PAY,RoleEnum.ACCT_RCV,RoleEnum.EMP_BENEFITS,RoleEnum.GEN_LEDGER,RoleEnum.PAYROLL,RoleEnum.INVENTORY,RoleEnum.PRODUCTION,RoleEnum.QUALITY_CTL,RoleEnum.SALES,RoleEnum.ORDERS,RoleEnum.CUSTOMERS,RoleEnum.SHIPPING,RoleEnum.RETURNS];
};RoleEnum.getComboList=function(){var cList=RoleEnum.getList();cList.unshift(RoleEnum.NONE_SELECTED);
return cList;};RoleEnum.getItem=function(ordinal){var list=RoleEnum.getList();for(var i=0;
i<list.length;i++){if(RoleEnum[list[i]].ordinal==ordinal){return RoleEnum[list[i]];
}}return null;};var RoleVO=Objs("org.puremvc.js.demos.objs.employeeadmin.model.vo.RoleVO",{uname:"",roles:[]});
var UserVO=Objs("org.puremvc.js.demos.objs.employeeadmin.model.vo.UserVO",{uname:"",fname:"",lname:"",email:"",password:"",department:DeptEnum.NONE_SELECTED,getIsValid:function(){return this.uname!=""&&this.password!=""&&this.department!=DeptEnum.NONE_SELECTED;
},getGivenName:function(){return this.lname+", "+this.fname;}});var RoleProxy=Objs("org.puremvc.js.demos.objs.employeeadmin.model.RoleProxy",Proxy,{initialize:function(name,roles){Proxy.prototype.initialize.call(this,name,roles);
return this;},getRoles:function(){return this.data;},addItem:function(role){this.getRoles().push(role);
},deleteItem:function(item){var roles=this.getRoles();for(var i=0;i<roles.length;
i++){if(roles[i].uname==item.uname){roles.splice(i,1);break;}}},doesUserHaveRole:function(user,role){var roles=this.getRoles();
var hasRole=false;for(var i=0;i<roles.length;i++){if(roles[i].uname==user.uname){var userRoles=roles[i].roles;
for(var j=0;j<userRoles.length;j++){var roleEnum=userRoles[j];if(roleEnum.equals(role)){hasRole=true;
break;}}break;}}return hasRole;},addRoleToUser:function(user,role){var roles=this.getRoles();
var result=false;if(!this.doesUserHaveRole(user,role)){for(var i=0;i<roles.length;
i++){if(roles[i].uname==user.uname){var userRoles=roles[i].roles;userRoles.push(role);
result=true;break;}}}},removeRoleFromUser:function(user,role){var roles=this.getRoles();
if(this.doesUserHaveRole(user,role)){for(var i=0;i<roles.length;i++){if(roles[i].uname==user.uname){var userRoles=roles[i].roles;
for(var j=0;j<userRoles.length;j++){var roleEnum=userRoles[j];if(roleEnum.equals(role)){userRoles.splice(j,1);
break;}}break;}}}},getUserRoles:function(uname){var roles=this.getRoles();var userRoles=new Array();
for(var i=0;i<roles.length;i++){if(roles[i].uname==uname){userRoles=roles[i].roles;
break;}}return userRoles;}});var UserProxy=Objs("org.puremvc.js.demos.objs.employeeadmin.model.UserProxy",Proxy,{initialize:function(name,users){Proxy.prototype.initialize.call(this,name,users);
},getUsers:function(){return this.data;},addItem:function(user){this.getUsers().push(user);
},getUser:function(uname){var users=this.getUsers();for(var i=0;i<users.length;i++){if(users[i].uname==uname){return users[i];
}}return null;},updateItem:function(user){var users=this.getUsers();for(var i=0;i<users.length;
i++){if(users[i].uname==user.uname){users[i]=user;}}},deleteItem:function(user){var users=this.getUsers();
for(var i=0;i<users.length;i++){if(users[i].uname==user.uname){users.splice(i,1);
}}}});var UiComponent=Objs("org.puremvc.js.demos.objs.employeeadmin.view.components.UiComponent",{initialize:function(){this.listenerMap=new Object();
},listenerMap:null,dispatchEvent:function(type,properties){if(typeof type=="undefined"){return;
}if(typeof this.listenerMap[UiComponent.QUEUE_PATTERN+type]=="undefined"){return;
}var queue=this.listenerMap[UiComponent.QUEUE_PATTERN+type].slice(0);var props=properties||{};
var len=queue.length;for(var i=0;i<len;i++){var listenerDescriptor=queue[i];if(typeof listenerDescriptor.listener=="function"){if(typeof listenerDescriptor.context!="undefined"){listenerDescriptor.listener.call(listenerDescriptor.context,props);
}else{listenerDescriptor.listener.call(this,event,props);}}}},addEventListener:function(type,listener,context){if(typeof type=="undefined"){return;
}if(typeof listener=="undefined"){return;}var newListener=new UiComponent.ListenerDescriptor(listener,context);
var queue;if(typeof this.listenerMap[UiComponent.QUEUE_PATTERN+type]=="undefined"){queue=this.listenerMap[UiComponent.QUEUE_PATTERN+type]=new Array();
}else{queue=this.listenerMap[UiComponent.QUEUE_PATTERN+type];}var len=queue.length;
for(var i=0;i<len;i++){var listenerDescriptor=queue[i];if(listenerDescriptor.equals(newListener)){return;
}}queue.push(newListener);},removeEventListener:function(type,listener,context){if(typeof type=="undefined"){return;
}if(typeof listener=="undefined"){return;}if(typeof this.listenerMap[UiComponent.QUEUE_PATTERN+type]=="undefined"){return;
}var queue=this.listenerMap[UiComponent.QUEUE_PATTERN+type];var len=queue.length;
for(var i=0;i<len;i++){if(UiComponent.ListenerDescriptor.equals(new UiComponent.ListenerDescriptor(listener,context))){queue.splice(i,1);
return;}}}});UiComponent.Event=function(){};UiComponent.Event.prototype.type=null;
UiComponent.Event.prototype.properties=null;UiComponent.QUEUE_PATTERN="@_@";UiComponent.ListenerDescriptor=function(listener,context){this.listener=listener;
this.context=context;};UiComponent.equals=function(compared){if(compared.listener==this.listener){if(typeof compared.context!="undefined"){if(compared.context==null&&this.context==null){return true;
}if(compared.context==this.context){return true;}}}return false;};var RolePanel=Objs("org.puremvc.js.demos.objs.employeeadmin.view.components.RolePanel",UiComponent,{user:null,selectedRole:null,mode:null,rolePanel:null,roleList:null,userRoleList:null,addRoleButton:null,removeRoleButton:null,initialize:function(){RolePanel.$super.initialize.call(this);
this.initializeChildren();this.configureListeners();this.fillRoleList();this.setEnabled(false);
},initializeChildren:function(){this.rolePanel=$(".role-panel");this.userRoleList=this.rolePanel.find("#user-role-list");
this.userRoleList.jqGrid({datatype:"local",colNames:["Roles"],colModel:[{name:"value",index:"value"}],multiselect:true});
this.roleList=this.rolePanel.find(".role-list").combobox();this.addRoleButton=this.rolePanel.find(".add-role-button").button();
this.removeRoleButton=this.rolePanel.find(".remove-role-button").button();},configureListeners:function(){var that=this;
this.addRoleButton.click(function(evt){that.addRoleButton_clickHandler();});this.removeRoleButton.click(function(evt){that.removeRoleButton_clickHandler();
});this.roleList.change(function(evt){that.roleList_changeHandler();});this.userRoleList.change(function(evt){that.userRoleList_changeHandler();
});},fillRoleList:function(){var roleEnumList=RoleEnum.getComboList();this.roleList.empty();
var htmlList="";for(var i=0;i<roleEnumList.length;i++){var role=roleEnumList[i];var valueAttr='value="'+role.ordinal+'"';
var selectedAttr=i==0?"selected":"";htmlList+="<option "+valueAttr+" "+selectedAttr+" >"+role.value+"</option>";
}this.roleList.html(htmlList);},setUserRoles:function(userRoles){this.userRoleList.jqGrid("clearGridData");
if(!userRoles){return;}for(var i=0;i<userRoles.length;i++){var role=userRoles[i];
var rowData={role:role,value:role.value};this.userRoleList.jqGrid("addRowData",i+1,rowData);
}},getUser:function(){return this.user;},getSelectedRole:function(){return this.selectedRole;
},setEnabled:function(isEnabled){this.addRoleButton.disabled=this.removeRoleButton.disabled=!isEnabled;
this.userRoleList.disabled=this.roleList.disabled=!isEnabled;if(!isEnabled){this.roleList.selectedIndex=-1;
}},setMode:function(mode){switch(mode){case RolePanel.ADD_MODE:this.addRoleButton.disabled=false;
this.removeRoleButton.disabled=true;break;case RolePanel.REMOVE_MODE:this.addRoleButton.disabled=true;
this.removeRoleButton.disabled=false;this.roleList.selectedIndex=0;break;default:this.addRoleButton.disabled=true;
this.removeRoleButton.disabled=true;}},clearForm:function(){this.user=null;this.setUserRoles(null);
this.roleList.selectedIndex=0;this.userRoleList.jqGrid("resetSelection");},addRoleButton_clickHandler:function(){this.dispatchEvent(RolePanel.ADD);
},removeRoleButton_clickHandler:function(){this.dispatchEvent(RolePanel.REMOVE);},userRoleList_changeHandler:function(){this.roleList.selectedIndex=-1;
this.selectedRole=this.userRoleList.options[this.userRoleList.selectedIndex].associatedValue;
this.setMode(RolePanel.REMOVE_MODE);},roleList_changeHandler:function(){this.userRoleList.selectedIndex=-1;
this.selectedRole=this.roleList[this.roleList.selectedIndex].associatedValue;if(this.selectedRole==RoleEnum.NONE_SELECTED){this.setMode(null);
}else{this.setMode(RolePanel.ADD_MODE);}}});RolePanel.REMOVE="remove";RolePanel.ADD_MODE="addMode";
RolePanel.REMOVE_MODE="removeMode";var UserForm=Objs("org.puremvc.js.demos.objs.employeeadmin.view.components.UserForm",UiComponent,{userFormPanel:null,uname:null,fname:null,lname:null,email:null,password:null,confirm:null,department:null,submitButton:null,user:null,userRoles:null,mode:null,roleListComparer:null,initialize:function(){UserForm.$super.initialize.call(this);
this.initializeChildren();this.configureListeners();},initializeChildren:function(){this.userFormPanel=$(".user-form-panel");
this.uname=this.userFormPanel.find(".uname");this.fname=this.userFormPanel.find(".fname");
this.lname=this.userFormPanel.find(".lname");this.email=this.userFormPanel.find(".email");
this.password=this.userFormPanel.find(".password");this.confirm=this.userFormPanel.find(".confirm");
this.department=this.userFormPanel.find(".department").combobox();this.roles=this.userFormPanel.find(".roles");
this.submitButton=this.userFormPanel.find(".submit-button").button();this.cancelButton=this.userFormPanel.find(".cancel-button").button();
},configureListeners:function(){var that=this;this.uname.focus(function(evt){that.field_focusHandler(evt);
});this.password.focus(function(evt){that.field_focusHandler(evt);});this.confirm.focus(function(evt){that.field_focusHandler(evt);
});this.department.focus(function(evt){that.field_focusHandler(evt);});this.roles.focus(function(evt){that.field_focusHandler(evt);
});this.submitButton.click(function(evt){that.submit_clickHandler(evt);});this.cancelButton.click(function(evt){that.cancel_clickHandler(evt);
});this.clearForm();},fillDepartmentList:function(){var deptEnumList=DeptEnum.getComboList();
var htmlList="";for(var i=0;i<deptEnumList.length;i++){var deptEnum=deptEnumList[i];
var valueAttr='value="'+deptEnum.ordinal+'"';var selectedAttr=deptEnum.equals(this.user.department)?"selected":"";
htmlList+="<option "+valueAttr+" "+selectedAttr+" >"+deptEnum.value+"</option>";}this.department.html(htmlList);
$(document).bind("pageshow",function(event,ui){$(".department").selectmenu("refresh",true);
$(document).unbind("pageshow",arguments.callee);$(document).unbind("pageshow",arguments.callee);
});},fillRoleList:function(){var roleEnumList=RoleEnum.getComboList();this.roleListComparer=[];
var htmlList="";for(var i=0;i<roleEnumList.length;i++){var roleEnum=roleEnumList[i];
var valueAttr=roleEnum.ordinal>=0?'value="'+roleEnum.ordinal+'"':"";var selectedAttr=this.isUserRole(roleEnum)?"selected":"";
htmlList+="<option "+valueAttr+" "+selectedAttr+" >"+roleEnum.value+"</option>";}this.roles.html(htmlList);
},setUser:function(user){this.user=user;this.uname.val(user.uname);this.fname.val(user.fname);
this.lname.val(user.lname);this.email.val(user.email);this.password.val(user.password);
this.confirm.val(user.password);this.fillDepartmentList();},getUser:function(){this.updateUser();
return this.user;},setUserRoles:function(userRoles){this.userRoles=userRoles;this.fillRoleList();
},getUserRoles:function(){},updateUser:function(){this.user.uname=this.uname.val();
this.user.fname=this.fname.val();this.user.lname=this.lname.val();this.user.email=this.email.val();
this.user.password=this.password.val();var selected=this.department.selectedIndex;
var deptEnumList=DeptEnum.getComboList();this.user.department=deptEnumList[selected];
this.fillRoleList();},clearForm:function(){this.setFieldError("uname",false);this.setFieldError("password",false);
this.setFieldError("confirm",false);this.setFieldError("department",false);},setMode:function(mode){this.mode=mode;
switch(mode){case UserForm.MODE_ADD:this.submitButton.find(".ui-btn-text").text("Add");
break;case UserForm.MODE_EDIT:this.submitButton.find(".ui-btn-text").text("Save");
break;}},submit_clickHandler:function(){if(this.getErrors()){return;}this.updateUser();
if(this.user.getIsValid()){if(this.mode==UserForm.MODE_ADD){this.dispatchEvent(UserForm.ADD);
}else{this.dispatchEvent(UserForm.UPDATE);}}},cancel_clickHandler:function(){this.dispatchEvent(UserForm.CANCEL);
},deleteButton_clickHandler:function(){this.dispatchEvent(UserForm.REMOVE);},field_focusHandler:function(evt){this.setFieldError($(evt.target).attr("class"),false);
},getErrors:function(){var error=false;if(this.uname.val()==""){this.setFieldError("uname",error=true);
}else{this.setFieldError("uname",false);}if(this.password.val()==""){this.setFieldError("password",error=true);
}else{this.setFieldError("password",false);}if(this.password.val()!=""&&this.confirm.val()!=this.password.val()){this.setFieldError("confirm",error=true);
}else{this.setFieldError("confirm",false);}var selected=this.department.val();var deptEnumList=DeptEnum.getComboList();
var department=deptEnumList[selected];if(department==DeptEnum.NONE_SELECTED){this.setFieldError("department",error=true);
}else{this.setFieldError("department",false);}selected=this.roles.val();var rolesEnumList=RoleEnum.getComboList();
var role=rolesEnumList[selected];if(role==RoleEnum.NONE_SELECTED){this.setFieldError("roles",error=true);
}else{this.setFieldError("roles",false);}return error;},setFieldError:function(fieldName,error){var label=this.userFormPanel.find('label[for="'+fieldName+'"]');
var field=this.userFormPanel.find("."+fieldName);if(error){field.addClass("fieldError");
}else{field.removeClass("fieldError");}},isUserRole:function(roleEnum){for(var i=0;
i<this.userRoles.length;i++){if(roleEnum.equals(this.userRoles[i])){return true;}}return false;
}});UserForm.ADD_USER="add";UserForm.UPDATE_USER="update";UserForm.DELETE_USER="cancel";
UserForm.CANCEL="cancel";UserForm.MODE_ADD="modeAdd";UserForm.MODE_EDIT="modeEdit";
UserForm.ADD_ROLE="addRole";UserForm.REMOVE_ROLE="removeRole";var UserList=Objs("org.puremvc.js.demos.objs.employeeadmin.view.components.UserList",UiComponent,{userListPanel:null,userList:null,newButton:null,users:null,initialize:function(){UserList.$super.initialize.call(this);
this.initializeChildren();this.configureListeners();},initializeChildren:function(){this.userListPanel=$(".user-list-panel");
this.userList=this.userListPanel.find("#user-list");this.userList.jqGrid({datatype:"local",width:630,height:160,colNames:["User Name","First Name","Last Name","Email","Department"],colModel:[{name:"uname",index:"uname",width:125},{name:"fname",index:"fname",width:125},{name:"lname",index:"lname",width:125},{name:"email",index:"email",width:130},{name:"department",index:"department",width:125}]});
this.newButton=this.userListPanel.find(".new-button").button();this.deleteButton=this.userListPanel.find(".delete-button").button();
},configureListeners:function(){var that=this;this.userList.jqGrid("setGridParam",{onSelectRow:function(id){that.userList_selectHandler(id);
}});this.newButton.click(function(evt){that.newButton_clickHandler(evt);});this.deleteButton.click(function(evt){that.deleteButton_clickHandler(evt);
});},setUsers:function(userList){this.users=userList;this.userList.jqGrid("clearGridData");
for(var i=0;i<userList.length;i++){var user=userList[i];var rowData={uname:user.uname,fname:user.fname,lname:user.lname,email:user.email,department:user.department.value};
this.userList.jqGrid("addRowData",i+1,rowData);}},userList_selectHandler:function(id){var rowData=this.userList.jqGrid("getRowData",id);
for(var i=0;i<this.users.length;i++){if(this.users[i].uname==rowData.uname){this.dispatchEvent(UserList.SELECT,rowData.uname);
}}},newButton_clickHandler:function(){this.dispatchEvent(UserList.NEW);},deleteButton_clickHandler:function(){this.dispatchEvent(UserList.DELETE);
}});UserList.NEW="new";UserList.DELETE="delete";UserList.SELECT="select";var RolePanelMediator=Objs("org.puremvc.js.demos.objs.employeeadmin.view.components.RolePaneMediator",Mediator,{roleProxy:null,initialize:function(name,viewComponent){RolePanelMediator.$super.initialize.call(this,RolePanelMediator.NAME,viewComponent);
var rolePanel=this.getRolePanel();rolePanel.addEventListener(RolePanel.ADD,this.onAddRole,this);
rolePanel.addEventListener(RolePanel.REMOVE,this.onRemoveRole,this);this.roleProxy=this.facade.retrieveProxy(ProxyNames.ROLE_PROXY);
},getRolePanel:function(){return this.viewComponent;},onAddRole:function(prop){this.roleProxy.addRoleToUser(this.getRolePanel().getUser(),this.getRolePanel().getSelectedRole());
this.getRolePanel().setMode(null);},onRemoveRole:function(event){this.roleProxy.removeRoleFromUser(this.getRolePanel().getUser(),this.getRolePanel().getSelectedRole());
this.updateUserRoleList();this.getRolePanel().setMode(null);},updateUserRoleList:function(){var userName=this.getRolePanel().user.uname;
var userRoles=this.roleProxy.getUserRoles(userName);this.getRolePanel().setUserRoles(userRoles);
},listNotificationInterests:function(){return[NotificationNames.NEW_USER,NotificationNames.USER_ADDED,NotificationNames.USER_UPDATED,NotificationNames.USER_DELETED,NotificationNames.CANCEL_SELECTED,NotificationNames.USER_SELECTED,NotificationNames.ADD_ROLE_RESULT];
},handleNotification:function(note){var rolePanel=this.getRolePanel();switch(note.getName()){case NotificationNames.NEW_USER:rolePanel.clearForm();
rolePanel.setEnabled(false);break;case NotificationNames.USER_ADDED:rolePanel.user=note.getBody();
var roleVO=new RoleVO(rolePanel.user.uname);this.roleProxy.addItem(roleVO);rolePanel.clearForm();
rolePanel.setEnabled(false);break;case NotificationNames.USER_UPDATED:rolePanel.clearForm();
rolePanel.setEnabled(false);break;case NotificationNames.USER_DELETED:rolePanel.clearForm();
rolePanel.setEnabled(false);break;case NotificationNames.CANCEL_SELECTED:rolePanel.clearForm();
rolePanel.setEnabled(false);break;case NotificationNames.USER_SELECTED:rolePanel.clearForm();
rolePanel.setEnabled(true);rolePanel.setMode(null);rolePanel.user=note.getBody();
this.updateUserRoleList();break;case NotificationNames.ADD_ROLE_RESULT:this.updateUserRoleList();
break;}}});var UserFormMediator=Objs("org.puremvc.js.demos.objs.employeeadmin.view.UserFormMediator",Mediator,{initialize:function(name,viewComponent){Mediator.prototype.initialize.call(this,name,viewComponent);
var userForm=this.getUserForm();userForm.addEventListener(UserForm.ADD,this.onAdd,this);
userForm.addEventListener(UserForm.UPDATE,this.onUpdate,this);userForm.addEventListener(UserForm.CANCEL,this.onCancel,this);
this.userProxy=this.facade.retrieveProxy(UserProxy.NAME);this.roleProxy=this.facade.retrieveProxy(ProxyNames.ROLE_PROXY);
},roleProxy:null,userProxy:null,mode:null,getUserForm:function(){return this.viewComponent;
},onAdd:function(event){var user=this.getUserForm().getUser();var userRoles=this.getUserForm().getUserRoles();
this.userProxy.addItem(user);this.sendNotification(NotificationNames.USER_ADDED,user);
},onUpdate:function(){var user=this.getUserForm().getUser();var userRoles=this.getUserForm().getUserRoles();
this.userProxy.updateItem(user);this.sendNotification(NotificationNames.USER_UPDATED,user);
},onCancel:function(){this.sendNotification(NotificationNames.CANCEL_SELECTED);},listNotificationInterests:function(){return[NotificationNames.NEW_USER,NotificationNames.USER_SELECTED];
},handleNotification:function(note){var userForm=this.getUserForm();var user;switch(note.getName()){case NotificationNames.NEW_USER:userForm.clearForm();
userForm.setUser(note.getBody());userForm.setUserRoles([]);userForm.setMode(UserForm.MODE_ADD);
break;case NotificationNames.USER_SELECTED:user=note.getBody();userForm.clearForm();
userForm.setUser(user);var roles=this.roleProxy.getUserRoles(user.uname);userForm.setUserRoles(roles);
userForm.setMode(UserForm.MODE_EDIT);break;}}});UserFormMediator.ADD="add";UserFormMediator.UPDATE="update";
UserFormMediator.CANCEL="cancel";UserFormMediator.MODE_ADD="modeAdd";UserFormMediator.MODE_EDIT="modeEdit";
var UserListMediator=Objs("org.puremvc.js.demos.objs.employeeadmin.view.UserListMediator",Mediator,{userList:null,initialize:function(name,viewComponent){Mediator.prototype.initialize.call(this,name,viewComponent);
var userList=this.getUserList();userList.addEventListener(UserList.NEW,this.onNew,this);
userList.addEventListener(UserList.SELECT,this.onSelect,this);var userProxy=this.facade.retrieveProxy(ProxyNames.USER_PROXY);
userList.setUsers(userProxy.getUsers());},getUserList:function(){return this.viewComponent;
},listNotificationInterests:function(){return[NotificationNames.CANCEL_SELECTED,NotificationNames.USER_UPDATED,NotificationNames.USER_ADDED,NotificationNames.USER_DELETED];
},handleNotification:function(note){var userList=this.getUserList();var userProxy=this.facade.retrieveProxy(ProxyNames.USER_PROXY);
switch(note.getName()){case NotificationNames.CANCEL_SELECTED:userList.deSelect();
break;case NotificationNames.USER_UPDATED:userList.setUsers(userProxy.getUsers());
userList.deSelect();break;case NotificationNames.USER_ADDED:userList.setUsers(userProxy.getUsers());
userList.deSelect();break;case NotificationNames.USER_DELETED:userList.setUsers(userProxy.getUsers());
userList.deSelect();break;}},onNew:function(){var user=new UserVO();this.sendNotification(NotificationNames.NEW_USER,user);
this.sendNotification(NotificationNames.USER_SELECTED,user);},onSelect:function(selectedUserName){var userProxy=this.facade.retrieveProxy(ProxyNames.USER_PROXY);
var selectedUser=userProxy.getUser(selectedUserName);this.sendNotification(NotificationNames.USER_SELECTED,selectedUser);
}});var ApplicationFacade=Objs("org.puremvc.js.demos.objs.employeeadmin.ApplicationFacade",Facade,{startup:function(app){this.sendNotification(NotificationNames.STARTUP,app);
},initializeController:function(){Facade.prototype.initializeController.call(this);
this.registerCommand(NotificationNames.STARTUP,StartupCommand);this.registerCommand(NotificationNames.DELETE_USER,DeleteUserCommand);
this.registerCommand(NotificationNames.ADD_ROLE_RESULT,AddRoleResultCommand);}});
ApplicationFacade.getInstance=function(){if(!Facade.instance){Facade.instance=new ApplicationFacade();
}return Facade.instance;};